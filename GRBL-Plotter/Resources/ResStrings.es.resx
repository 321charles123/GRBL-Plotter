<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="serialCloseError" xml:space="preserve">
    <value>Se necesita conexión en serie. \r\nCierre la ventana principal</value>
  </data>
  <data name="mainAttention" xml:space="preserve">
    <value>Atención</value>
  </data>
  <data name="mainLimits1" xml:space="preserve">
    <value>¡El próximo movimiento excederá los límites de la máquina!\r</value>
  </data>
  <data name="mainLimits2" xml:space="preserve">
    <value>\r\nPresione 'Ok' para moverse de todos modos</value>
  </data>
  <data name="mainParseError" xml:space="preserve">
    <value>No es un numero valido</value>
  </data>
  <data name="mainProblem" xml:space="preserve">
    <value>Problema</value>
  </data>
  <data name="mainQuit" xml:space="preserve">
    <value>Salir de GRBL-Plotter?</value>
  </data>
  <data name="mainToolChange" xml:space="preserve">
    <value>¡Cambio de herramienta / lápiz!</value>
  </data>
  <data name="mainToolChange1" xml:space="preserve">
    <value>Cambio de herramienta necesario: \r</value>
  </data>
  <data name="mainToolChange2" xml:space="preserve">
    <value>\r presione inicio para continuar.</value>
  </data>
  <data name="mainInfoCheckCode" xml:space="preserve">
    <value>Verifique el código G</value>
  </data>
  <data name="mainInfoSendCode" xml:space="preserve">
    <value>Enviar código G</value>
  </data>
  <data name="mainInfoStopStream" xml:space="preserve">
    <value>DETENER la transmisión (</value>
  </data>
  <data name="mainInfoStopStream2" xml:space="preserve">
    <value>DETENER la transmisión (línea</value>
  </data>
  <data name="mainInfoToolChange" xml:space="preserve">
    <value>Cambio de herramienta...</value>
  </data>
  <data name="mainInfoUndo" xml:space="preserve">
    <value>Deshacer la última acción</value>
  </data>
  <data name="mainHotkeyError" xml:space="preserve">
    <value>Archivo 'hotkeys.xml' no encontrado, no hay teclas de acceso rápido configuradas!</value>
  </data>
  <data name="mainHotkeyError1" xml:space="preserve">
    <value>Acción desconocida:</value>
  </data>
  <data name="mainHotkeyError2" xml:space="preserve">
    <value>Error con Hotkey.xml</value>
  </data>
  <data name="mainLimits3" xml:space="preserve">
    <value>¡La dimensión de gráficos excede la dimensión de la máquina! \ R \ n ¡Se recomienda la transformación para evitar dañar la máquina!</value>
  </data>
  <data name="mainLoadError" xml:space="preserve">
    <value>La transmisión debe detenerse antes de cargar un nuevo archivo</value>
  </data>
  <data name="mainLoadError1" xml:space="preserve">
    <value>Archivo no encontrado: '</value>
  </data>
  <data name="mainLoadError2" xml:space="preserve">
    <value>La extensión de URL no es 'svg' o 'dxf' \r\n Intente importar SVG de todos modos, pero sin configurar la lista 'Archivo reciente'.</value>
  </data>
  <data name="mainParseError1" xml:space="preserve">
    <value>No es un número válido, establezca la línea en 0</value>
  </data>
  <data name="mainPauseStream" xml:space="preserve">
    <value>Pausar transmisión - presione play</value>
  </data>
  <data name="mainPauseStream1" xml:space="preserve">
    <value>El último trabajo se detuvo en la línea.</value>
  </data>
  <data name="mainPauseStream2" xml:space="preserve">
    <value>\r\n¿Quieres continuar con el trabajo?</value>
  </data>
  <data name="mainStreamingActive" xml:space="preserve">
    <value>La transmisión aún está activa: presione Detener e intente nuevamente</value>
  </data>
  <data name="mainUnknownCode" xml:space="preserve">
    <value>G-Code desconocido comentado: \r\n</value>
  </data>
  <data name="mainInfoErrorLine" xml:space="preserve">
    <value>Error antes de la línea</value>
  </data>
  <data name="mainInfoFinishCheck" xml:space="preserve">
    <value>Termine de verificar el código G</value>
  </data>
  <data name="mainInfoFinishSend" xml:space="preserve">
    <value>Terminer l'envoi du code G</value>
  </data>
  <data name="mainInfoKill" xml:space="preserve">
    <value>Presione 'Kill Alarm' para continuar</value>
  </data>
  <data name="mainInfoLaserModeOff" xml:space="preserve">
    <value>Modo láser no activo $32 = 0</value>
  </data>
  <data name="mainInfoLaserModeOn" xml:space="preserve">
    <value>Modo láser activo $32 = 1</value>
  </data>
  <data name="mainInfoPause" xml:space="preserve">
    <value>Pausar transmisión - presione play (</value>
  </data>
  <data name="mainInfoProbing" xml:space="preserve">
    <value>Sondeo</value>
  </data>
  <data name="mainInfoResume" xml:space="preserve">
    <value>Presione 'Reanudar' para continuar</value>
  </data>
  <data name="mainInfoWaitIdle" xml:space="preserve">
    <value>Espere IDLE, luego pause (</value>
  </data>
  <data name="mainProgress" xml:space="preserve">
    <value>Progreso</value>
  </data>
</root>